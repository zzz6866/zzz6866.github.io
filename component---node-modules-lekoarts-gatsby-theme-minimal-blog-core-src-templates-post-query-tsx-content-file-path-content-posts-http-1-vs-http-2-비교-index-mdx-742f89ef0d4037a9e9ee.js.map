{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-http-1-vs-http-2-비교-index-mdx-742f89ef0d4037a9e9ee.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/HTTP1-vs-HTTP2-비교/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    br: \"br\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"HTTP/2는 HTTP/1에서 발생하는 문제점을 개선하였고 호환성도 유지가 가능하다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"HTTP/1 문제점\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"HOL(Head Of Line) 블로킹\"), \"\\n\", React.createElement(_components.li, null, \"비대한 메시지 헤더(요청과 응답의 헤더를 압축하지 않음)\"), \"\\n\", React.createElement(_components.li, null, \"제한적인 우선순위\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"HTTP/1 성능 개선 방법\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"쿠키 없는 도메인을 만들어 개선할 수도 있다.\"), \"\\n\", React.createElement(_components.li, null, \"스프라이팅 : 작은 이미지들을 합쳐서 하나의 큰 이미지로 만든 후에 CSS로 컨트롤 하여 사용, HTTP/2는 성능이 좋아 고려할 필요가 없음.\"), \"\\n\", React.createElement(_components.li, null, \"샤딩 : 호스트이름 마다 여러개의 연결 후 병렬로 처리하는 브라우저의 기능\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.h3, null, \"HTTP 1.1 Persistent\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mermaid\"\n  }, \"%% Example of sequence diagram\\n  sequenceDiagram\\n    Note right of Server: HTTP 1.1 Persistent\\n    opt 1 요청\\n    Server-->>Client: Response\\n    Client->>Server: Reqeust\\n    end\\n    opt 2 요청\\n    Server-->>Client: Response\\n    Client->>Server: Reqeust\\n    end\\n    opt 3 요청\\n    Server-->>Client: Response\\n    Client->>Server: Reqeust\\n    end\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"동시 전송이 안되고 순차적으로 처리\"), \"\\n\", React.createElement(_components.li, null, \"Connection 하나당 Request 요청을 처리 가능\"), \"\\n\", React.createElement(_components.li, null, \"지연이 발생함\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.h3, null, \"HTTP 1.1 Pipelining\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mermaid\"\n  }, \"%% Example of sequence diagram\\n  sequenceDiagram\\n    Note right of Server: HTTP 1.1 Pipelining\\n    Server-->>Client: Response\\n    Server-->>Client: Response\\n    Client->>Server: Reqeust\\n    Client->>Server: Reqeust\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"패킷 용량을 줄일 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"Connection 하나로 다수의 Request 와 Response 를 처리하고 Network Latency를 줄일 수 있다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"SPDY ?\"), \"\\n\", React.createElement(_components.p, null, \"HTTP의 대안으로 구글이 제안한 프로토콜이다. HTTP/2의 기반이 되었으며 다중화(Multiplexing), 프레이밍(Framing), 헤더압축(Header Compression)가 특징적이며 증명이 되었다.\", React.createElement(_components.br), \"\\n\", \"다음과 같은 이유로 HTTP/2의 기반으로 사용하기로 하였다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"HOL(Head Of Line) 블로킹 문제 해결\"), \"\\n\", React.createElement(_components.li, null, \"TCP 체감 지연 시간 개선\"), \"\\n\", React.createElement(_components.li, null, \"혼잡 제어 개선(병렬 처리 관련)\"), \"\\n\", React.createElement(_components.li, null, \"HTTP/1.1의 기존 문서화된 것을 최대한 활용, 호환성 유지\"), \"\\n\", React.createElement(_components.li, null, \"새로운 기능에 대한 명확한 정책\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"HTTP 2.0 특징\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"헤더 압축 가능\"), \"\\n\", React.createElement(_components.li, null, \"헤더 이력 저장으로 이미 전달된 정보 재전달 방지\"), \"\\n\", React.createElement(_components.li, null, \"프레이 계층, HTTP 계층으로 나뉨\"), \"\\n\", React.createElement(_components.li, null, \"다중화\"), \"\\n\", React.createElement(_components.li, null, \"암호화\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"HTTP 2.0 전환시 고려사항\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"브라우저의 HTTP/2 지원 여부\"), \"\\n\", React.createElement(_components.li, null, \"TLS(HTTPS) 전환\"), \"\\n\", React.createElement(_components.li, null, \"기존 클라이언트 지원(기존 사용자들을 무시할순 없다)\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"TLS(SSL) ?\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"SSL 규약은 처음에 넷스케이프가 만들었다. 1.0 버전은 공개 된 적이 없고, 2.0 버전이 1995년 2월에 이르러서야 릴리스가 된다. 그러나 이 버전은 많은 보안 결함 때문에 3.0 버전으로 곧바로 이어진다. 3.0은 1996년 릴리스 된다. 결국 3.0 버전은 TLS 버전 1.0의 기초가 되고, IETF에서 1999년 1월에 RFC 2246 표준 규약으로 정의하게 된다. 마지막 갱신은 RFC 5246 이었다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://ko.wikipedia.org/wiki/%EC%A0%84%EC%86%A1_%EA%B3%84%EC%B8%B5_%EB%B3%B4%EC%95%88\"\n  }, \"위키백과 - 개발 역사 참고\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/park/WebstormProjects/zzz6866.github.io/content/posts/HTTP1-vs-HTTP2-비교/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","blockquote","p","h2","ul","li","h3","pre","code","br","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}